The ``4-print_square`` module
============================

Using ``print_square``
---------------------

Import module:
    >>> print_square = __import__('4-print_square').print_square

Test correct print"
    >>> print_square(4)
    ####
    ####
    ####
    ####

Test correct zero print:
    >>> print_square(0)


Test for negative print:
    >>> print_square(-4)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Test for float size:
     >>> print_square(4.4)
     Traceback (most recent call last):
     ...
     TypeError: size must be an integer

Test for None size:
     >>> print_square(None)
     Traceback (most recent call last):
     ...
     TypeError: size must be an integer

Test for infinity size:
     >>> print_square(float('inf'))
     Traceback (most recent call last):
     ...
     TypeError: size must be an integer

Test for nan size:
     >>> print_square(float('nan'))
     Traceback (most recent call last):
     ...
     TypeError: size must be an integer

Test for non integar size:
     >>> print_square("laila")
     Traceback (most recent call last):
     ...
     TypeError: size must be an integer

Test for a large size:
     >>> print_square(10)
     ##########
     ##########
     ##########
     ##########
     ##########
     ##########
     ##########
     ##########
     ##########
     ##########

Test for missing arguments:
     >>> print_square()
     Traceback (most recent call last):
     ...
     TypeError: print_square() missing 1 required positional argument: 'size'
